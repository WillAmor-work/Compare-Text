/*******************************************************************************

                            CPA Software Solutions
                      

			     Barker Brettell


Description:
Bring over the Cases from the Progressor db to Inprotech

Modification History:
30/11/2022		Created		D Hodges


*******************************************************************************/
use EMEABB
go

set concat_null_yields_null off
go

--select * from BB..VAPPSALL

--DECLARE @LogID        int,
--        @RowsAffected bigint,
--        @Error        int

--EXECUTE [dbo].[cpass_conv_Log_Start] NULL,
--                                     N'200 - Cases',
--                                     NULL,
--                                     N'Cases',
--                                     N'Inserting into CASEFAMILY existing families',
--                                     N'CASEFAMILY',
--                                     1,
--                                     @LogID OUTPUT

--insert into CASEFAMILY (FAMILY,FAMILYTITLE)
--select distinct cmc.FAMILY,f.FAMILYTITLE
--from 
--	Conv_MappingCases cmc
--	join inpro81..CASES c on c.caseid = cmc.SY_CASEID
--	join inpro81..CASEFAMILY f on c.FAMILY = f.FAMILY
--	left join CASEFAMILY cf on cf.FAMILY = cmc.FAMILY
--where cf.FAMILY is null
----and cmc.FAMILY = 'P7058'

--SELECT @Error        = @@ERROR,
--       @RowsAffected = @@ROWCOUNT

--EXECUTE [dbo].[cpass_conv_Log_End] @LogID,
--                                   @RowsAffected,
--                                   @Error,
--                                   1
--go

--DECLARE @LogID        int,
--        @RowsAffected bigint,
--        @Error        int

--EXECUTE [dbo].[cpass_conv_Log_Start] NULL,
--                                     N'200 - Cases',
--                                     NULL,
--                                     N'Cases',
--                                     N'Inserting into CASEFAMILY new families',
--                                     N'CASEFAMILY',
--                                     1,
--                                     @LogID OUTPUT

--insert into CASEFAMILY (FAMILY,FAMILYTITLE)
--select distinct cmc.FAMILY,cmc.FAMILY
--from 
--	Conv_MappingCases cmc
--	left join inpro81..CASES c on c.caseid = cmc.SY_CASEID
--	left join inpro81..CASEFAMILY f on c.FAMILY = f.FAMILY
--	left join CASEFAMILY cf on cf.FAMILY = cmc.FAMILY
--where cf.FAMILY is null and f.FAMILY is null

--SELECT @Error        = @@ERROR,
--       @RowsAffected = @@ROWCOUNT

--EXECUTE [dbo].[cpass_conv_Log_End] @LogID,
--                                   @RowsAffected,
--                                   @Error,
--                                   1
--go
--
-- insert into Cases
--
--12:28 before disable trigger
ALTER TABLE CASES DISABLE TRIGGER CPAFieldsInsertedOnCases
--ALTER TABLE CASES DISABLE TRIGGER tI_CASES_Integration
ALTER TABLE CASES DISABLE TRIGGER InsertCASES_ids
ALTER TABLE CASES DISABLE TRIGGER tI_CASES_Audit
ALTER TABLE CASES DISABLE TRIGGER tI_UniqueCaseReference

DECLARE @LogID        int,
        @RowsAffected bigint,
        @Error        int

EXECUTE [dbo].[cpass_conv_Log_Start] NULL,
                                     N'200 - Cases',
                                     NULL,
                                     N'Cases',
                                     N'Inserting into Cases - Patents/Designs',
                                     N'CASE',
                                     1,
                                     @LogID OUTPUT





insert into CASES(CASEID, IRN, CASETYPE, COUNTRYCODE, PROPERTYTYPE, CASECATEGORY, SUBTYPE, TITLE, STATUSCODE, --LOCALCLASSES, INTCLASSES,
		 ENTITYSIZE,PURCHASEORDERNO,CURRENTOFFICIALNO, OFFICEID) --, LOCALCLIENTFLAG, FAMILY, TYPEOFMARK, NOINSERIES, STEM)
select	CMC.CASEID, 
		substring(IRN, 1,30), 
		CMC.CASETYPE,
		CMC.COUNTRYCODE as COUNTRYCODE,
		CMC.PROPERTYTYPE, 
		case when CMC.CASECATEGORY = 'See Comment' then 'N'
			else CMC.CASECATEGORY end as CASECATEGORY,
		case when CMC.SUBTYPE = 'See Comment' then 'N'
			else CMC.SUBTYPE end as SUBTYPE, 
		substring(dbo.fn_StripNonASCII(CMC.TITLE), 1, 254) as TITLE,
		CASE WHEN cmc.LIVEFLAG != 'Y' THEN 19 --Dead on Conversion 
			 ELSE NULL END as STATUSCODE,
		--LOCALCLASSES,			--Local Classes
		--INTCLASSES,			-- INT Classes
		CMC.ENTITYSIZE,
		PURCHASEORDERNO,
		case when REGNO is not null and REGNO <> ' ' then substring(REGNO, 1, 36)
			else substring(APPNO, 1, 36) end,							-- Current Official No.
		OFFICEID --Office ID 
		--null,			-- Local Client Flag
		--CMC.FAMILY,			-- Family
		--TYPEOFMARK,		-- Type Of Mark
		--NULL
		--STEM
from	 Conv_MappingCases CMC
--where PROPERTYTYPE != ''
--left join COUNTRY c on CMC.COUNTRYCODE = c.COUNTRYCODE where c.COUNTRYCODE is null
--where IRN = 'ZMT5693W'


--select * from conv_mappingcases where propertytype = ''

SELECT @Error        = @@ERROR,
       @RowsAffected = @@ROWCOUNT

EXECUTE [dbo].[cpass_conv_Log_End] @LogID,
                                   @RowsAffected,
                                   @Error,
                                   1
go

ALTER TABLE CASES ENABLE TRIGGER CPAFieldsInsertedOnCases
--ALTER TABLE CASES ENABLE TRIGGER tI_CASES_Integration
ALTER TABLE CASES ENABLE TRIGGER InsertCASES_ids
ALTER TABLE CASES ENABLE TRIGGER tI_CASES_Audit
ALTER TABLE CASES ENABLE TRIGGER tI_UniqueCaseReference


--select * from Conv_STATUSMAP




DECLARE @LogID        int,
        @RowsAffected bigint,
        @Error        int

EXECUTE [dbo].[cpass_conv_Log_Start] NULL,
                                     N'200 - Cases',
                                     NULL,
                                     N'Cases',
                                     N'Inserting applications in Property table',
                                     N'PROPERTY',
                                     1,
                                     @LogID OUTPUT

insert into PROPERTY(CASEID, BASIS, RENEWALSTATUS) --, NOOFCLAIMS,RENEWALNOTES)
select	--*,
	CMC.CASEID,
	BASIS,
	CASE WHEN cmc.LIVEFLAG != 'Y' THEN -226 
		 ELSE NULL END as RENEWALSTATUS
	--rs.STATUSCODE as RENEWALSTATUS,
	--p.NOOFCLAIMS,
	--p.RENEWALCYCLE,
	--p.RENEWALNOTES
--select distinct p.RENEWALSTATUS
from	 Conv_MappingCases CMC

where	cmc.CASETYPE = 'A'
	--and p.RENEWALSTATUS is not null

SELECT @Error        = @@ERROR,
       @RowsAffected = @@ROWCOUNT

EXECUTE [dbo].[cpass_conv_Log_End] @LogID,
                                   @RowsAffected,
                                   @Error,
                                   1
go
--select * from property
--select * from BB..VAPPSALL2 where STATUSNOT_AE is null
--select * from status

--MOVED TO 150 script

--DECLARE @LogID        int,
--        @RowsAffected bigint,
--        @Error        int

--EXECUTE [dbo].[cpass_conv_Log_Start] NULL,
--                                     N'200 - Cases',
--                                     NULL,
--                                     N'Cases',
--                                     N'Update Entity Size - Default to large',
--                                     N'CASES',
--                                     1,
--                                     @LogID OUTPUT

--Update C
--set		ENTITYSIZE =	case
--							when small.CASE_EXT_DATA = 'Y' then 2604 
--							when micro.CASE_EXT_DATA = 'Y' then -42846999
--							else 2601 
--						end 
----select 
----	cmc.CASEID,
----	micro.CASE_EXT_DATA as MICRO,
----	small.CASE_EXT_DATA as SMALL,
----	case
----		when small.CASE_EXT_DATA = 'Y' then 2604 
----		when micro.CASE_EXT_DATA = 'Y' then -42846999
----		else 2601 
----	end as ENTITYSIZE
--from	
--	CASES C
--	join Conv_MappingCases CMC on (C.CASEID = CMC.CASEID)
--	left join BB..CASE_EXT small on small.CASE_REF COLLATE DATABASE_DEFAULT = cmc.BB_CASE_REF and small.CASE_EXT_KEY = 'SMALL ENTITY' and small.CASE_EXT_DATA != ''
--	left join BB..CASE_EXT micro on micro.CASE_REF COLLATE DATABASE_DEFAULT = cmc.BB_CASE_REF and micro.CASE_EXT_KEY = 'MICRO ENTITY' and micro.CASE_EXT_DATA != ''
	

--SELECT @Error        = @@ERROR,
--       @RowsAffected = @@ROWCOUNT

--EXECUTE [dbo].[cpass_conv_Log_End] @LogID,
--                                   @RowsAffected,
--                                   @Error,
--                                   1
--go


--	select 	* from TABLECODES where tabletype  = 26



--
-- For Related Cases
-- If the cases is related to an existing case on the database set the RelatedCaseid column
--

--DECLARE @LogID        int,
--        @RowsAffected bigint,
--        @Error        int

--EXECUTE [dbo].[cpass_conv_Log_Start] NULL,
--                                     N'200 - Cases',
--                                     NULL,
--                                     N'RelatedCases',
--                                     N'Updating external relationships if case exists',
--                                     N'CASES',
--                                     1,
--                                     @LogID OUTPUT

--Update	RC
--set		RELATEDCASEID = C.CASEID,
--		OFFICIALNUMBER = NULL,
--		COUNTRYCODE = NULL
----select *
--from	RELATEDCASE RC
--join	CASES C1 on (RC.CASEID = C1.CASEID)
--join	OFFICIALNUMBERS O on (RC.OFFICIALNUMBER = O.OFFICIALNUMBER
--					and		RC.CASEID <> O.CASEID)
--join	CASES C on (RC.COUNTRYCODE = C.COUNTRYCODE
--				and		RC.CASEID <> C.CASEID
--				and		O.CASEID = C.CASEID)
--join	Conv_MappingCases CMC on (C.CASEID = CMC.CASEID)
--where	RC.RELATEDCASEID is null
--and		RC.OFFICIALNUMBER is not null

--SELECT @Error        = @@ERROR,
--       @RowsAffected = @@ROWCOUNT

--EXECUTE [dbo].[cpass_conv_Log_End] @LogID,
--                                   @RowsAffected,
--                                   @Error,
--                                   1
--go

--DECLARE @LogID        int,
--        @RowsAffected bigint,
--        @Error        int

--EXECUTE [dbo].[cpass_conv_Log_Start] NULL,
--                                     N'200 - Cases',
--                                     NULL,
--                                     N'NameTypeClassification',
--                                     N'Identify where name is being used',
--                                     N'NAMES',
--                                     1,
--                                     @LogID OUTPUT

--insert into NAMETYPECLASSIFICATION(NAMENO, NAMETYPE, ALLOW)
--select	distinct CTT.NAMENO,  CN.NAMETYPE, 1
--from	Conv_NAME CTT
--join	NAME N on (CTT.NAMENO = N.NAMENO)
--join	CASENAME CN on (N.NAMENO = CN.NAMENO)

--SELECT @Error        = @@ERROR,
--       @RowsAffected = @@ROWCOUNT

--EXECUTE [dbo].[cpass_conv_Log_End] @LogID,
--                                   @RowsAffected,
--                                   @Error,
--                                   1
--go
